/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Models.DBManager;
import Models.OrderLine;
import Models.Product;
import Models.Staff;
import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultListModel;

/**
 *
 * @author Project Manager
 */
public class StaffViewProducts extends javax.swing.JFrame {
    
    //Attribute to access the staff information
    private Staff loggedInStaff;
    //Hashmap to access the product class
    private HashMap<Integer, Product> products;
    //Attribute to access product information
    private Product selectedProduct;

    /**
     * Creates new form StaffViewProducts
     */
    public StaffViewProducts(Staff staff) {
        //Attribute to access the staff class
        loggedInStaff = staff;
        //DBManager to access the loadProducts method
        DBManager db = new DBManager();
        products = db.loadProducts();
        
        initComponents();
        //Set background colour
        getContentPane().setBackground(new java.awt.Color(255, 216, 57));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCategory = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstProduct = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAddProduct = new javax.swing.JButton();
        txtEditProduct = new javax.swing.JButton();
        txtDeleteProduct = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Staff View Products");

        lstCategory.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Bike", "Skateboard" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstCategory.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCategoryValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstCategory);

        lstProduct.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstProductValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstProduct);

        jLabel2.setText("Category");

        jLabel3.setText("Product");

        txtAddProduct.setText("Add Product");
        txtAddProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddProductActionPerformed(evt);
            }
        });

        txtEditProduct.setText("Edit Product");
        txtEditProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEditProductActionPerformed(evt);
            }
        });

        txtDeleteProduct.setText("Delete Product");
        txtDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeleteProductActionPerformed(evt);
            }
        });

        btnBack.setText("Return to Staff Home");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(txtAddProduct)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEditProduct)))
                                .addGap(18, 18, 18)
                                .addComponent(txtDeleteProduct))
                            .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMessage)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAddProduct)
                    .addComponent(txtEditProduct)
                    .addComponent(txtDeleteProduct))
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//Add product page, passing in the liggedinstaff attribute to pass the staff's name
    private void txtAddProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddProductActionPerformed
        AddProduct addProduct = new AddProduct(loggedInStaff);
        this.dispose();
        addProduct.setVisible(true);
    }//GEN-LAST:event_txtAddProductActionPerformed
//Edit Product Button
    private void txtEditProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEditProductActionPerformed
        //Checks if a product has been selected
        if(lstProduct.getSelectedIndex() != -1)
        {
            //Loads the edit product screen passing in Staff and selectedProduct
            EditProduct editProduct = new EditProduct(loggedInStaff, selectedProduct);
            this.dispose();
            editProduct.setVisible(true);
        }
        else
        {
            //If no product is selected, this message id displayed
            lblMessage.setText("Please First Select A Product");
        }
    }//GEN-LAST:event_txtEditProductActionPerformed
//Delete Product Button
    private void txtDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeleteProductActionPerformed
        //Checks if product has been selected
        if(lstProduct.getSelectedIndex() != -1)
        {
            String productName = selectedProduct.toString();
            //DBManager to access and load the delete product method
            DBManager db = new DBManager();
            //Passing the selectedProduct variable
            db.deleteProduct(selectedProduct);
            products.remove(selectedProduct.getProductId());
            
            //Loads a new list be calling the default list model
            DefaultListModel model = new DefaultListModel();
        
            //Looks to get the value of the product
            for(Map.Entry<Integer, Product> productEntry : products.entrySet())
            {
                //Gets the value of the product
                Product actualProduct = productEntry.getValue();
                //This will find the categories through the model forlder, in the product class
                if(actualProduct.getClass().getName().equals("models." + lstCategory.getSelectedValue()))
                {
                    //Adds the product to the list
                    model.addElement(actualProduct);
                }
            }
            //This loads the products in the list
            lstProduct.setModel(model);       
                    
            lblMessage.setText(productName + " has been removed");
        }
        else
        {
            //This message will be displayed if there are not products selected
            lblMessage.setText("Please First Select A Product");
        }
    }//GEN-LAST:event_txtDeleteProductActionPerformed
//Staff home button
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        StaffHome staffHome = new StaffHome(loggedInStaff);
        this.dispose();
        staffHome.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void lstCategoryValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCategoryValueChanged
        //Calls a new defaultListModel to load the list
        DefaultListModel model = new DefaultListModel();
        
        //Looks at each product to get the value of the product
        for(Map.Entry<Integer, Product> productEntry : products.entrySet())
        {
            //Gets the products value
            Product actualProduct = productEntry.getValue();
            //This will find the categories through the Model folder in the product class
            if(actualProduct.getClass().getName().equals("Models." + lstCategory.getSelectedValue()))
                    
            {
                //Adds the product to the list
               model.addElement(actualProduct);

            }
            
        }
        //Loads the products in the list
         lstProduct.setModel(model);
    }//GEN-LAST:event_lstCategoryValueChanged

    private void lstProductValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstProductValueChanged
       //This allows the list of items to be shown from the database
        Object selectedProductObject = (Object)lstProduct.getSelectedValue();
        selectedProduct = (Product)selectedProductObject;
        lblMessage.setText("");
    }//GEN-LAST:event_lstProductValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffViewProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
             //   new StaffViewProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JList<String> lstCategory;
    private javax.swing.JList<String> lstProduct;
    private javax.swing.JButton txtAddProduct;
    private javax.swing.JButton txtDeleteProduct;
    private javax.swing.JButton txtEditProduct;
    // End of variables declaration//GEN-END:variables
}
