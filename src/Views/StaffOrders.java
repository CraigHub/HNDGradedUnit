/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Models.Customer;
import Models.DBManager;
import Models.Order;
import Models.Staff;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Project Manager
 */
public class StaffOrders extends javax.swing.JFrame {
    
    //Attributes to access the staff information
    private Staff loggedInStaff;
    
    //Hashmap to add the customer infomation
    private HashMap<String, Customer> customers;
    
    //Pass in the staff Class 
    public StaffOrders(Staff staff) {
        //Link the staff class to the attribute
        loggedInStaff = staff;
        //New Instance of the DBManager 
        DBManager db = new DBManager();
        //Load the hashmap with the customers infomation 
        customers = db.loadCustomers();
        initComponents();
        
        //Sets background colour to specified RGB value
        getContentPane().setBackground(new java.awt.Color(255, 216, 57));
        
        //Displays the infomation into the table, with each row
        tblOrders.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        //This looks at the orderlines created, and will get the infomation about the order
        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        
        //Loop through all customers to get the orders that every customer placed
        for(Map.Entry<String, Customer> cEntry : customers.entrySet())
        {
            //Get the infomation of the customer
            Customer actualCustomer = cEntry.getValue();
            
            //Get the orders that the customer created
            for(Map.Entry<Integer, Order> oEntry : actualCustomer.getOrders().entrySet())
            {
                //Get the infomation of the order
                Order actualOrder = oEntry.getValue();
                
                //If the status in the database is 'Completed'
                if(actualOrder.getStatus().equals("Complete"))
                {
                    //This will add the row, displaying customer username, order ID, date and total
                     model.addRow(new Object[] {actualCustomer.getUsername(), actualOrder.getOrderId(), 
                         actualOrder.getOrderDate(), actualOrder.getOrderTotal()});
                }            
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnViewOrder = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer", "Order ID", "Order Date", "Order Total"
            }
        ));
        jScrollPane1.setViewportView(tblOrders);

        btnBack.setText("Return to Staff Home");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnViewOrder.setText("View Order");
        btnViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnViewOrder)
                            .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMessage)
                .addGap(19, 19, 19)
                .addComponent(btnViewOrder)
                .addGap(18, 18, 18)
                .addComponent(btnBack)
                .addContainerGap(81, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        StaffHome StaffHome = new StaffHome(loggedInStaff);
        this.dispose();
        StaffHome.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrderActionPerformed
         if(tblOrders.getSelectedRow() == -1)
        {
            lblMessage.setText("No Order Selected");
        }
        else
        {
            DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
            String customerId = String.valueOf(model.getValueAt(tblOrders.getSelectedRow(),0));
            int orderId = Integer.parseInt(String.valueOf(model.getValueAt(tblOrders.getSelectedRow(),1)));
            
            Order orderSelected = customers.get(customerId).getOrders().get(orderId);
           
            StaffOrderLines staffOrderLines = new StaffOrderLines(loggedInStaff, orderSelected);
            this.dispose();
            staffOrderLines.setVisible(true);
        }
    
    }//GEN-LAST:event_btnViewOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            //    new StaffOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnViewOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
}
