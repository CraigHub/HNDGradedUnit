/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Models.Customer;
import Models.Order;
import Models.DBManager;
import java.util.Map;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Project Manager
 */
public class CustomerOrders extends javax.swing.JFrame {
    
    //Attribute to access the customer information
    public Customer loggedInCustomer;

    private int orderId;
    /**
     * Creates new form CustomerOrders
     */
    //Passing in Customer
    public CustomerOrders(Customer customerIn) {
        //connecting customer class to attribute
        loggedInCustomer = customerIn;
        
        initComponents();
        //Set Background Colour
        getContentPane().setBackground(new java.awt.Color(255, 216, 57));
        
        //This displays the orders in the table one by one.
        tblOrders.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        //This looks at the orderlines created and finds the info about the order
        DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
        for(Map.Entry<Integer, Order> orderEntry : 
                loggedInCustomer.getOrders().entrySet())
        {
            Order actualOrder = orderEntry.getValue();
            
            //Checks if the status of the order is complete
            if(actualOrder.getStatus().equals("Complete"))
            {
                //this adds to the table displayng the OrderId, Date and Total
            model.addRow(new Object[]{actualOrder.getOrderId(), actualOrder.getOrderDate(),
                            "Â£" + actualOrder.getOrderTotal()});
        }
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnViewOrder = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        btnCancelOrder = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Order Date", "Price"
            }
        ));
        jScrollPane1.setViewportView(tblOrders);

        jLabel1.setText("Customer Orders");

        btnViewOrder.setText("View Order");
        btnViewOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewOrderActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnCancelOrder.setText("Cancel Order");
        btnCancelOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelOrderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(15, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 77, Short.MAX_VALUE)
                                        .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnViewOrder)
                                        .addGap(76, 76, 76)
                                        .addComponent(btnBack))
                                    .addComponent(btnCancelOrder)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(145, 145, 145)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(lblMessage)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewOrder)
                    .addComponent(btnBack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelOrder)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewOrderActionPerformed
        //Checks if an order has been selected
        if(tblOrders.getSelectedRow() == -1)
        {
            //If not this error will be displayed
            lblMessage.setText("No Order Selected");
        }
        else
        {
            //This will find the order by the ID and go to the orderlines page
            DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
            int orderId = Integer.parseInt(String.valueOf(model.getValueAt(tblOrders.getSelectedRow(),0)));
           
            CustomerOrderLines customerOrderLines = new CustomerOrderLines(loggedInCustomer, orderId);
            this.dispose();
            customerOrderLines.setVisible(true);
        }
    }//GEN-LAST:event_btnViewOrderActionPerformed
//Back Button
    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        CustomerHome customerHome = new CustomerHome (loggedInCustomer);
         this.dispose();
         customerHome.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnCancelOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelOrderActionPerformed
        //Checks to make sure a row has been selected to delete
        if(tblOrders.getSelectedRow() == -1)
        {
            //Error message displayed if no row selected
            lblMessage.setText("No Order Selected");
        }
        else
        {
            //Looks at the table to get order
            DefaultTableModel model = (DefaultTableModel)tblOrders.getModel();
            int orderId = Integer.parseInt(String.valueOf(model.getValueAt(tblOrders.getSelectedRow(),0)));

            //Deletes the line from the table
            model.removeRow(tblOrders.getSelectedRow());
            
            //Create new DB to access methods
            DBManager db = new DBManager();
            
        //Pass in the order Id to delete the order
        db.cancelOrder(orderId);
        
        loggedInCustomer.getOrders().remove(orderId); 
        
        
            //Message displayed for successfull deletion
            lblMessage.setText("Order Has Been Removed");
            
        }
    }//GEN-LAST:event_btnCancelOrderActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerOrders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new CustomerOrders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancelOrder;
    private javax.swing.JButton btnViewOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JTable tblOrders;
    // End of variables declaration//GEN-END:variables
}
