/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Models.Bike;
import Models.DBManager;
import Models.Product;
import Models.Skateboard;
import Models.Staff;

/**
 *
 * @author Project Manager
 */
public class EditProduct extends javax.swing.JFrame {
    //Attributes to access Staff and Product class
     private Staff loggedInStaff;
     private Product selectedProduct;
    /**
     * Creates new form EditProduct
     */
    public EditProduct(Staff staff, Product product){
        
        //Connecting staff and product to the attributes
        loggedInStaff = staff;
        selectedProduct = product;
        
        initComponents();
        getContentPane().setBackground(new java.awt.Color(255, 216, 57));
        
        //Sets text to the product id from the database and disables the field
        //to prevent a change
        txtProductId.setText(String.valueOf(selectedProduct.getProductId()));
        txtProductId.setEnabled(false);
        
        //Sets the textboxes to name price and stocklevel from the database
        txtName.setText(selectedProduct.getProductName());
        txtPrice.setText(String.valueOf(selectedProduct.getPrice()));
        txtStockLevel.setText(String.valueOf(selectedProduct.getStockLevel()));
       
        //This checks is the product is a Skateboard or Bike
        if(selectedProduct.getClass().getName().equals("Models.Skateboard"))
        {
            //Convert the product to skateboard class to access the Type section from the DB
            Skateboard selectedSkateboard = (Skateboard)selectedProduct;
            //Sets the additional lable to Type
            lblAdditional.setText("Type:");
            txtAdditional.setText(String.valueOf(selectedSkateboard.getType()));
        }
        else
        {
            //Convert the product to Bike class to access the FrameSize section from the DB
            Bike selectedBike = (Bike)selectedProduct;
            //Sets the additional label to Size
            lblAdditional.setText("Size:");
            txtAdditional.setText(String.valueOf(selectedBike.getFrameSize()));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtProductId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtStockLevel = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        txtAdditional = new javax.swing.JTextField();
        lblAdditional = new javax.swing.JLabel();
        lblMessage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Edit Product");

        jLabel2.setText("Product ID:");

        jLabel3.setText("Name:");

        jLabel4.setText("Price:");

        jLabel5.setText("Stock Level:");

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnBack.setText("Return To Product Select");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnSubmit)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClear)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(lblAdditional, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAdditional, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(jLabel1)
                            .addComponent(txtProductId)
                            .addComponent(txtName)
                            .addComponent(txtPrice)
                            .addComponent(txtStockLevel))))
                .addContainerGap(136, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMessage)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtProductId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtStockLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAdditional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAdditional))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnClear))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBack)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
       //Checks if any textboxes are empty
        if(!txtName.getText().isEmpty() && !txtPrice.getText().isEmpty() &&
            !txtStockLevel.getText().isEmpty() && !txtAdditional.getText().isEmpty())
        {
            //Get input from user by getting text and setting it to its own attribute
            //Declare local attributes
            String name = txtName.getText();
            double price;
            int stockLevel;
            int frameSize;
            String type = "";
  
            //Checks the stock level and throws an error is the value is in the wrong format
            try
            {
                stockLevel = Integer.parseInt(txtStockLevel.getText());
            }
            catch(Exception ex)
            {
                lblMessage.setText("Error: Stock Level is not in Correct Format");
                return;
            }
            
            try
            {
                price = Double.parseDouble(txtPrice.getText());
            }
            catch(Exception ex)
            {
                lblMessage.setText("Error: Price is not in Correct Format");
                return;
            }

            //If radio button for Bike is selected
            if(selectedProduct.getClass().getName().equals("Models.Bike"))
            {
                 try
                {
                    frameSize = Integer.parseInt(txtAdditional.getText());
                }
                catch(Exception ex)
                {
                    lblMessage.setText("Error: Frame Size is not in Correct Format");
                    return;
                }
                
                
                int productId = selectedProduct.getProductId();
                Bike newBike = new Bike(productId, name, price, stockLevel, frameSize);
                DBManager db = new DBManager();
                db.updateProducts(newBike);
                lblMessage.setText("Bicylce Updated Successfully");
            }
            else
            {
                int productId = selectedProduct.getProductId();
                type = txtAdditional.getText();
                Skateboard newSkateboard = new Skateboard(productId, name, price, stockLevel, type);
                DBManager db = new DBManager();
                db.updateProducts(newSkateboard);
                lblMessage.setText("Skateboard Updated Successfully");
            }
        }
        else
        {
            //Message will display if there are empty textboxes
            lblMessage.setText("Please Complete All Fields");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtName.setText(selectedProduct.getProductName());
        txtPrice.setText(String.valueOf(selectedProduct.getPrice()));
        txtStockLevel.setText(String.valueOf(selectedProduct.getStockLevel()));
        
        if(selectedProduct.getClass().getName().equals("Models.Skateboard"))
        {
            Skateboard selectedSkateboard = (Skateboard)selectedProduct;
            lblAdditional.setText("Type:");
            txtAdditional.setText(String.valueOf(selectedSkateboard.getType()));
        }
        else
        {
            Bike selectedBike = (Bike)selectedProduct;
            lblAdditional.setText("FrameSize:");
            txtAdditional.setText(String.valueOf(selectedBike.getFrameSize()));
        }
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        StaffViewProducts viewProducts = new StaffViewProducts(loggedInStaff);
        this.dispose();
        viewProducts.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new EditProduct().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblAdditional;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JTextField txtAdditional;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtProductId;
    private javax.swing.JTextField txtStockLevel;
    // End of variables declaration//GEN-END:variables
}
